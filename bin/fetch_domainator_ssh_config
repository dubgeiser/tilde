#!/usr/bin/env python3

""" Script to download the ssh_config for all of our servers.

Quick thingie, no error checking or whatever.
Output the result to ~/.ssh/digipolis-hosts

"""

from getpass import getpass
import os

import requests


def login_accepted(response):
    return not (ff_username in response.text or ff_password in response.text)

url = os.environ['DOMAINATOR_URL']

# Url of the login form
url_login = f"{url}/login"

# Url of the SSH config (as download).
url_ssh_config = f"{url}/export/ssh-config/download"

# The default user name.
username_default = os.environ['DOMAINATOR_USER']

# Where to store the SSH config when fetched
fn_ssh_config = os.path.join(os.environ["HOME"], ".ssh/digipolis-hosts")

# The names of the username- and password form fields in the login form.
ff_username = "security_login_form[email]"
ff_password = "security_login_form[password]"


s = requests.Session()
# put in try-catch with keyboardinterrupt exception
# Always make sure http session gets closed.
while True:
    # Get credentials: username and password
    username = input(f"Username/email [{username_default}]: ")
    if not username:
        username = username_default
    password = getpass(f"Password for {username}: ")

    # make it a payload to pass to a requests.post() call
    payload = {
            ff_username : username,
            ff_password : password,
            }
    r = s.post(url_login, data=payload, verify=False)
    if login_accepted(r):
        break
    else:
        print("Could not log in, please try again")

sshconfig = s.get(url_ssh_config).text
s.close()
f = open(fn_ssh_config, "w")
f.write(sshconfig)
f.close()

print("\n\n\n*** Don't forget to `ssh_load_autocomplete`! ***\n")
